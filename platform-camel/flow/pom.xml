<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.openehealth.ipf.platform-camel</groupId>
    <artifactId>platform-camel-flow</artifactId>
    <name>platform-camel-flow</name>
    
    <parent>
        <groupId>org.openehealth.ipf.platform-camel</groupId>
        <artifactId>platform-camel</artifactId>
        <version>1.7-SNAPSHOT</version>
    </parent>
    
    <properties>
        <osgi.export.pkg>
            org.apache.camel.*;version=${camel-version},
            org.openehealth.ipf.platform.camel.flow.*
        </osgi.export.pkg>
        <ipf.extension.classes>
            org.openehealth.ipf.platform.camel.flow.extend.FlowModelExtension
        </ipf.extension.classes>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>platform-camel-core</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openehealth.ipf.commons</groupId>
            <artifactId>commons-flow</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.osgi.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.osgi</groupId>
            <artifactId>spring-osgi-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/groovy</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <weaveDependencies>
                        <weaveDependency>
                            <groupId>org.apache.camel</groupId>
                            <artifactId>camel-core</artifactId>
                        </weaveDependency>
                    </weaveDependencies>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
               </executions>
            </plugin>
            <!--
                Need to offer Eclipse AJDT a jar file to weave that
                doesn't conflict with the existing camel-core jar on
                the classpath (that's a workaround until load-time
                weaving is implemented). 
             -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.camel</groupId>
                                    <artifactId>camel-core</artifactId>
                                    <version>${camel-version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <destFileName>camel-core.jar</destFileName>
                                    <outputDirectory>lib</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
                
            </plugin>
        </plugins>
    </build>    
    
</project>